#!/usr/bin/env ruby

require 'yaml'
require 'erb'
require 'active_record'

table = ARGV[0]

config = YAML.load(ERB.new(File.read('config/database.yml')).result)
ActiveRecord::Base.establish_connection(config['production'])
conn = ActiveRecord::Base.connection

shard_size  = ARGV[1] ? ARGV[1].to_i : 10_000_000
batch_size  = ARGV[2] ? ARGV[2].to_i : 100_000
shard_start = ARGV[3] ? ARGV[3].to_i : 0

max_id = conn.select_values("select id from #{table} order by id desc limit 1").first.to_i
puts "#{table} max id: #{max_id}"

shard_start.step(max_id, shard_size) do |min|
  max = min + shard_size - 1
  query = "select * from count_all_#{table}(#{batch_size}, #{min}, #{max})"
  print "#{query} ... "
  now = Time.now
  conn.execute(query)
  elapsed = (Time.now - now) / 60
  puts "#{elapsed.round(2)} min"
end

now = Time.now
print "Aggregating repo counts ... "
conn.execute('select agg_all_repo_counts()')
elapsed = (Time.now - now) / 60
puts "#{elapsed.round(2)} min"
